// var bd_divs = ee.FeatureCollection("users/palashbasak/bgd_admbnda_adm1_bbs_20201113");
// var aoi = bd_divs.filter(ee.Filter.eq('ADM1_EN','Sylhet'));


// District
var bd_dists = ee.FeatureCollection('users/palashbasak/bgd_admbnda_adm2_bbs_20201113');
// var aoi = bd_dists.filter(ee.Filter.eq('ADM2_EN','Sylhet'));
// var aoi = bd_dists.filter(ee.Filter.eq('ADM2_EN','Maulvibazar'));
// var aoi = bd_dists.filter(ee.Filter.eq('ADM2_EN','Habiganj'));
// var aoi = bd_dists.filter(ee.Filter.eq('ADM2_EN','Sunamganj'));
// var aoi = bd_dists.filter(ee.Filter.eq('ADM2_EN','Netrakona'));
// var aoi = bd_dists.filter(ee.Filter.eq('ADM2_EN','Kishoreganj'));
// var aoi = bd_dists.filter(ee.Filter.eq('ADM2_EN','Brahamanbaria'));

// Division
var bd_divs = ee.FeatureCollection("users/palashbasak/bgd_admbnda_adm1_bbs_20201113");
var aoi = bd_divs.filter(ee.Filter.eq('ADM1_EN','Sylhet'));

Map.centerObject(aoi, 9);

// Filter the collection for the VV product from the descending track
var s1 = ee.ImageCollection('COPERNICUS/S1_GRD')
    .filter(ee.Filter.eq('instrumentMode', 'IW'))
    // .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))
    .filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'))
    // .filterDate('2022-05-01','2022-06-19')
    // .filterDate('2022-02-01','2022-02-24')
    .filterDate('2022-06-17','2022-06-20')
    // .filterBounds(aoi)
    .map(function(image) {
        var VV = image.select('VV');
        var VH = image.select('VH');
        var VVVH = VV.divide(VH).rename('VVVH').toDouble();
        
        return image.addBands(VVVH); 
    }
  );
    // .select(['VV']);
print(s1);

// var addVVVH = function(image) {
//   var VV = image.select('VV');
//   var VH = image.select('VH');
//   var VVVH = VV.divide(VH).rename('VVVH').toDouble();
  
//   return image.addBands(VVVH);
// };

var image1 = s1.min();
print(image1);
// var image1 = addVVVH(image).select(['VV','VH','VVVH']);

// print(image1);

// See Waterbody as blue
Map.addLayer(image1.clip(aoi), {bands: ['VH','VV','VVVH'], min: -20, max: -7}, '2022 Clip');

// var imageRGB = image1.clip(aoi).visualize({bands: ['VH','VV','VVVH'], min: -20, max: -7});
var imageRGB = image1.visualize({bands: ['VH','VV','VVVH'], min: -20, max: -7});
print("rgb",imageRGB);

// // Export the image
// Export.image.toDrive({
//   image: image1,
//   folder: 'GoogleEarthEngine',
//   description: 'S1_Flood_Sylhet_20220616',
//   region: aoi
// });


var total_area = aoi.geometry().area().divide(1000000);
print('Total Area (Sq km)', total_area);

var flood = image1.select('VV').lt(-12);
var flood_mask = flood.updateMask(flood.eq(1));


var stats = flood_mask.multiply(ee.Image.pixelArea()).reduceRegion({
  reducer: ee.Reducer.sum(),
  geometry: aoi,
  scale: 30,
  maxPixels: 1e13,
  tileScale: 16
});

// print(stats);
var flood_area = ee.Number(stats.get('VV')).divide(1000000).round();
print('Flooded Area (Sq km)', flood_area);

var percentFlooded = flood_area.divide(total_area).multiply(100);
print('Perdent flooded: ', percentFlooded);

Export.image.toDrive({
  scale: 30,
  image: imageRGB,
  folder: 'GoogleEarthEngine',
  description: 'S1_Flood_Sylhet_20220616_pm_RGB_30m',
  fileFormat: 'GeoTIFF',
  region: aoi});
  
// // Filter the collection for the VV product from the descending track
// var s1 = ee.ImageCollection('COPERNICUS/S1_GRD')
//     .filter(ee.Filter.eq('instrumentMode', 'IW'))
//     // .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VV'))
//     // .filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'))
//     .filterDate('2022-06-01','2022-06-18')
//     .filterBounds(aoi);
//     // .select(['VV']);
// print(s1);